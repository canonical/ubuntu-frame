name: ubuntu-frame
adopt-info: ubuntu-frame
summary: The foundation for many embedded graphical display implementations
description: ubuntu-frame is a simple fullscreen shell (based on Wayland) used for kiosks, industrial displays, digital signage, smart mirrors, etc.
confinement: strict
base: core20
license: GPL-3.0
compression: lzo
package-repositories:
  - type: apt
    ppa: mir-team/release

architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
  - build-on: riscv64

environment:
  # Prep for Mir
  MIR_CLIENT_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/client-platform
  MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/server-platform
  LIBINPUT_QUIRKS_DIR: ${SNAP}/usr/share/libinput
  # Setup EGL from the plugs
  LD_LIBRARY_PATH:    $SNAP/graphics/lib
  LIBGL_DRIVERS_PATH: $SNAP/graphics/dri
  __EGL_VENDOR_LIBRARY_DIRS: $SNAP/graphics/glvnd/egl_vendor.d
  # Setup XKB
  XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb

layout:
  /usr/share/icons:
    bind: $SNAP/usr/share/icons
  /usr/share/libdrm:  # Needed by mesa-core20 on ARM GPUs
    bind: $SNAP/graphics/libdrm
  /usr/share/drirc.d:
    bind: $SNAP/graphics/drirc.d

apps:
  ubuntu-frame:
    command-chain: [bin/run-user, bin/run-frame]
    command: usr/local/bin/frame
    plugs:
      - opengl                # for compositing
      - login-session-control # to run as a user login (e.g. from a VT)
      - x11                   # to run on a host X11 server
      - network-bind          # to run via X-forwarding (e.g. development in a container/VM)
      - hardware-observe      # libinput likes to scan udev
    slots:
      - wayland

  daemon:
    command-chain: [bin/run-daemon, bin/run-frame]
    command: usr/local/bin/frame
    daemon: simple
    restart-delay: 3s
    environment:
      # XDG config
      XDG_CONFIG_HOME: $SNAP_DATA
      HOME: $SNAP_DATA
    plugs:
      - hardware-observe      # libinput likes to scan udev
      - opengl
    slots:
      - wayland

  screenshot:
    command-chain: [bin/anon-shm-preload, bin/run-client]
    command: bin/screenshot
    plugs:
      - opengl
    slots:
      # Should be a plug but one snap can't have both the wayland slot and plug. This works.
      - wayland

plugs:
  graphics-core20:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core20

parts:
  recipe-version:
    plugin: nil
    source: .
    source-type: git
    override-build: |
      git rev-list --count HEAD > $SNAPCRAFT_PART_INSTALL/recipe-version
    prime:
      - -recipe-version

  ubuntu-frame:
    after: [recipe-version]
    override-pull: |
      snapcraftctl pull
      mir_version=`LANG=C apt-cache policy mir-graphics-drivers-desktop | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      recipe_version=`cat $SNAPCRAFT_STAGE/recipe-version`
      snapcraftctl set-version $recipe_version-mir$mir_version
      if echo $mir_version | grep -e '+dev' -e '~rc' -q; then snapcraftctl set-grade devel; else snapcraftctl set-grade stable; fi
    plugin: cmake
    source: src
    build-packages:
      - pkg-config
      - libmiral-dev
      - libwayland-dev
      - libboost1.71-dev
      - libapparmor-dev
    stage-packages:
      - try:
          - libmiral5
      - else:
          - libmiral4
      - libapparmor1

  platform:
    plugin: nil
    stage-packages:
      - mir-platform-graphics-gbm-kms
      - mir-platform-graphics-x
    prime:
      - usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
      - usr/share/libinput

  icons:
    plugin: nil
    stage-packages: [dmz-cursor-theme]

  scripts:
    plugin: dump
    source: scripts

  anon-shm-preload:
    source: https://github.com/MirServer/anon-shm-preload.git
    plugin: cmake

  grim:
    plugin: nil
    stage-packages: [grim]

  cleanup:
    after: [ubuntu-frame, platform, icons, scripts]
    plugin: nil
    build-snaps: [ mesa-core20 ]
    override-prime: |
      set -eux
      cd /snap/mesa-core20/current/egl/lib
      find . -type f,l -exec rm -f $SNAPCRAFT_PRIME/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/{} \;
      rm -fr "$SNAPCRAFT_PRIME/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri"
      for CRUFT in bug doc doc-base drirc.d glvnd libdrm lintian man pkgconfig; do
        rm -rf "$SNAPCRAFT_PRIME/usr/share/$CRUFT"
      done
