name: ubuntu-frame
adopt-info: ubuntu-frame
summary: The foundation for many embedded graphical display implementations
description: ubuntu-frame is a simple fullscreen shell (based on Wayland) used for kiosks, industrial displays, digital signage, smart mirrors, etc.
confinement: strict
base: core24
license: GPL-3.0
compression: lzo

platforms:
  amd64:
  arm64:
  armhf:
  riscv64:

environment:
  # Prep for Mir
  MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/mir/server-platform
  LIBINPUT_QUIRKS_DIR: ${SNAP}/usr/share/libinput
  # Setup XKB
  XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb
  # Setup diagnostic
  MIR_SERVER_DIAGNOSTIC_PATH: $SNAP_COMMON/diagnostic/diagnostic.txt
  XDG_CURRENT_DESKTOP: UbuntuFrame:Mir

layout:
  /usr/share/icons:
    bind: $SNAP/usr/share/icons
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/drirc.d:  # Used by mesa-2404 for app specific workarounds
    symlink: $SNAP_COMMON/gpu-2404/drirc.d

apps:
  ubuntu-frame:
    command-chain:
    - bin/run-user
    - bin/run-frame
    - bin/gpu-2404-wrapper
    command: usr/local/bin/frame
    plugs:
      - opengl                # for compositing
      - login-session-control # to run as a user login (e.g. from a VT)
      - x11                   # to run on a host X11 server
      - network-bind          # to run via X-forwarding (e.g. development in a container/VM)
      - hardware-observe      # libinput likes to scan udev
      - desktop-launch
    slots:
      - wayland
    environment:
      XDG_DATA_DIRS: $SNAP/usr/share:/var/lib/snapd/desktop

  launcher:
    command-chain:
      - bin/wayland-launch
      - bin/gpu-2404-wrapper
    command: ubuntu_frame_launcher
    daemon: simple
    restart-delay: 3s
    restart-condition: always
    install-mode: disable
    plugs:
      - opengl
      - desktop-launch
      - wayplug
    environment:
      XDG_DATA_DIRS: $SNAP/usr/share:/var/lib/snapd/desktop

  daemon:
    command-chain:
    - bin/run-daemon
    - bin/run-frame
    - bin/gpu-2404-wrapper
    command: usr/local/bin/frame
    daemon: simple
    restart-delay: 3s
    install-mode: disable
    environment:
      # XDG config
      XDG_CONFIG_HOME: $SNAP_DATA
      HOME: $SNAP_DATA
      XDG_DATA_DIRS: $SNAP/usr/share:/var/lib/snapd/desktop
    plugs:
      - hardware-observe      # libinput likes to scan udev
      - opengl
      - desktop-launch
    slots:
      - wayland

  screenshot:
    command-chain:
    - bin/anon-shm-preload
    - bin/run-client
    - bin/gpu-2404-wrapper
    command: bin/screenshot
    plugs:
      - opengl
      - wayplug

plugs:
  gpu-2404:
    interface: content
    target: $SNAP/gpu-2404
    default-provider: mesa-2404
  wayplug:
    interface: wayland

slots:
  ubuntu-frame-diagnostic:
    interface: content
    content: diagnostic-text
    write: 
      - $SNAP_COMMON/diagnostic

parts:
  mir:
    plugin: nil
    stage-snaps:
      - mir-libs/24/edge
    prime:
      - -*.h
      - -*.pc
      - -share

  ubuntu-frame:
    after: [mir]
    override-build: |
      craftctl default
      mir_version=$( sed -rne 's/^version:\s+([^-]*)-.+$/\1/p' ${SNAPCRAFT_STAGE}/meta.mir-libs/snap.yaml )
      # work around https://github.com/diddlesnaps/snapcraft-multiarch-action/issues/22
      git config --global --add safe.directory ${CRAFT_PROJECT_DIR}
      recipe_version=`git -C ${CRAFT_PROJECT_DIR} rev-list --count HEAD`
      craftctl set version=$recipe_version-mir$mir_version
      if echo $mir_version | grep -e '+dev' -e '~rc' -q; then craftctl set grade=devel; else craftctl set grade=stable; fi
    plugin: cmake
    cmake-parameters:
      - -DENABLE_TESTING=OFF
    source: src
    build-packages:
      - pkg-config
      - libwayland-dev
      - libboost-iostreams-dev
      - libapparmor-dev
      - libfreetype6-dev
      - libxkbcommon-dev
    stage-packages:
      - libboost-iostreams1.74.0
      - xkb-data

    build-environment:
    - LD_LIBRARY_PATH: ${CRAFT_STAGE}/usr/lib/${CRAFT_ARCH_TRIPLET}

  assets:
    plugin: nil
    stage-packages:
    - fonts-ubuntu
    prime:
    - usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf
    - usr/share/fonts/truetype/ubuntu/Ubuntu[wdth,wght].ttf

  icons:
    plugin: nil
    stage-packages: [dmz-cursor-theme]

  scripts:
    plugin: dump
    source: scripts
    stage-packages:
      - inotify-tools

  anon-shm-preload:
    source: https://github.com/MirServer/anon-shm-preload.git
    plugin: cmake

  grim:
    plugin: nil
    stage-packages: [grim]
    prime:
      - -usr/share/fonts/truetype/dejavu

  gpu-snap:
    after:
      - ubuntu-frame
      - assets
      - icons
      - scripts
      - grim
      - launcher
    source: https://github.com/canonical/gpu-snap.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/gpu-2404-cleanup mesa-2404
      rm -rf ${CRAFT_PRIME}/usr/{doc,man,lintian,pkgconfig,X11}

    prime:
      - bin/gpu-2404-wrapper

  launcher:
    source: launcher
    plugin: nil
    build-packages:
      - clang
      - curl
      - git
      - cmake
      - ninja-build
      - unzip
      - libgtk-layer-shell-dev
      - libgtk-3-dev
    stage-packages:
      - libgtk-3-0t64
      - libgtk-layer-shell0
    override-build: |
      if [[ "${CRAFT_ARCH_BUILD_FOR}" != @(amd64|arm64) ]]; then
        install --mode 755 --no-target-directory ubuntu_frame_launcher.fake ${CRAFT_PART_INSTALL}/ubuntu_frame_launcher
      else
        git clone -b 3.29.2 https://github.com/flutter/flutter.git ${CRAFT_PART_BUILD}/flutter-distro
        export PATH=${CRAFT_PART_BUILD}/flutter-distro/bin:$PATH
        flutter config --no-enable-{web,ios,android,fuchsia,windows-desktop,macos-desktop}
        flutter pub get
        flutter build linux --release --verbose --target lib/main.dart
        cp -r build/linux/*/release/bundle/* ${CRAFT_PART_INSTALL}
      fi
